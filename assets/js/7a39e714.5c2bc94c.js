"use strict";(self.webpackChunkdev_doc=self.webpackChunkdev_doc||[]).push([[2542],{3905:function(e,t,n){n.r(t),n.d(t,{MDXContext:function(){return u},MDXProvider:function(){return p},mdx:function(){return v},useMDXComponents:function(){return d},withMDXComponents:function(){return c}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o.apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){return function(t){var n=d(t.components);return r.createElement(e,o({},t,{components:n}))}},d=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=d(n),p=a,f=c["".concat(i,".").concat(p)]||c[p]||m[p]||o;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},22286:function(e,t,n){var r=n(20862).default;Object.defineProperty(t,"__esModule",{value:!0}),t.useLinksCollector=t.createStatefulLinksCollector=t.ProvideLinksCollector=void 0;var a=r(n(67294));t.createStatefulLinksCollector=function(){var e=new Set;return{collectLink:function(t){e.add(t)},getCollectedLinks:function(){return[].concat(e)}}};var o=(0,a.createContext)({collectLink:function(){}});t.useLinksCollector=function(){return(0,a.useContext)(o)};t.ProvideLinksCollector=function(e){var t=e.children,n=e.linksCollector;return a.default.createElement(o.Provider,{value:n},t)}},33692:function(e,t,n){var r=n(95318).default,a=n(20862).default;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=r(n(63366)),i=a(n(67294)),l=n(73727),s=r(n(52263)),u=r(n(13919)),c=r(n(10412)),d=n(22286),p=n(44996),m=n(18780),f=["isNavLink","to","href","activeClassName","isActive","data-noBrokenLinkCheck","autoAddBaseUrl"];var v=function(e){var t,n,r=e.isNavLink,a=e.to,v=e.href,h=e.activeClassName,b=e.isActive,g=e["data-noBrokenLinkCheck"],x=e.autoAddBaseUrl,y=void 0===x||x,N=(0,o.default)(e,f),k=(0,s.default)().siteConfig,w=k.trailingSlash,C=k.baseUrl,O=(0,p.useBaseUrlUtils)().withBaseUrl,B=(0,d.useLinksCollector)(),P=a||v,j=(0,u.default)(P),K=null==P?void 0:P.replace("pathname://",""),S=void 0!==K?(n=K,y&&function(e){return e.startsWith("/")}(n)?O(n):n):void 0;S&&j&&(S=(0,m.applyTrailingSlash)(S,{trailingSlash:w,baseUrl:C}));var D=(0,i.useRef)(!1),L=r?l.NavLink:l.Link,M=c.default.canUseIntersectionObserver,E=(0,i.useRef)();(0,i.useEffect)((function(){return!M&&j&&null!=S&&window.docusaurus.prefetch(S),function(){M&&E.current&&E.current.disconnect()}}),[E,S,M,j]);var T=null!==(t=null==S?void 0:S.startsWith("#"))&&void 0!==t&&t,U=!S||!j||T;return S&&j&&!T&&!g&&B.collectLink(S),U?i.default.createElement("a",Object.assign({href:S},P&&!j&&{target:"_blank",rel:"noopener noreferrer"},N)):i.default.createElement(L,Object.assign({},N,{onMouseEnter:function(){D.current||null==S||(window.docusaurus.preload(S),D.current=!0)},innerRef:function(e){var t,n;M&&e&&j&&(t=e,n=function(){null!=S&&window.docusaurus.prefetch(S)},E.current=new window.IntersectionObserver((function(e){e.forEach((function(e){t===e.target&&(e.isIntersecting||e.intersectionRatio>0)&&(E.current.unobserve(t),E.current.disconnect(),n())}))})),E.current.observe(t))},to:S||""},r&&{isActive:b,activeClassName:h}))};t.default=v},13919:function(e,t){function n(e){return!0===/^(\w*:|\/\/)/.test(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return void 0!==e&&!n(e)},t.hasProtocol=n},44996:function(e,t,n){var r=n(95318).default;Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){void 0===t&&(t={});return(0,i().withBaseUrl)(e,t)},t.useBaseUrlUtils=i;var a=r(n(52263)),o=n(13919);function i(){var e=(0,a.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var a=void 0===r?{}:r,i=a.forcePrependBaseUrl,l=void 0!==i&&i,s=a.absolute,u=void 0!==s&&s;if(!n)return n;if(n.startsWith("#"))return n;if((0,o.hasProtocol)(n))return n;if(l)return t+n;var c=n.startsWith(t)?n:t+n.replace(/^\//,"");return u?e+c:c}(r,n,e,t)}}}},8802:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=t.trailingSlash,r=t.baseUrl;if(e.startsWith("#"))return e;if(void 0===n)return e;var a,o=e.split(/[#?]/)[0],i="/"===o||o===r?o:(a=o,n?function(e){return e.endsWith("/")?e:e+"/"}(a):function(e){return e.endsWith("/")?e.slice(0,-1):e}(a));return e.replace(o,i)}},18780:function(e,t,n){var r=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.uniq=t.applyTrailingSlash=void 0;var a=n(8802);Object.defineProperty(t,"applyTrailingSlash",{enumerable:!0,get:function(){return r(a).default}});var o=n(29964);Object.defineProperty(t,"uniq",{enumerable:!0,get:function(){return r(o).default}})},29964:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return Array.from(new Set(e))}},26265:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=(n(44996),n(33692),["components"]),l={id:"intro",title:"Introduction",sidebar_label:"Introduction"},s=void 0,u={unversionedId:"tools/intro",id:"tools/intro",isDocsHomePage:!1,title:"Introduction",description:"Some useful tools and frameworks that include many of the needed features are provided for developing CKB applications.",source:"@site/docs/tools/intro.md",sourceDirName:"tools",slug:"/tools/intro",permalink:"/docsite/docs/tools/intro",editUrl:"https://github.com/xying21/docsite/docs/tools/intro.md",tags:[],version:"current",lastUpdatedAt:1636020803,formattedLastUpdatedAt:"11/4/2021",frontMatter:{id:"intro",title:"Introduction",sidebar_label:"Introduction"},sidebar:"sidebar2",previous:{title:"Porting an Existing Ethereum DApp To Polyjuice",permalink:"/docsite/docs/develop/portingEthDapp"},next:{title:"ckb-cli Introduction",permalink:"/docsite/docs/tools/ckb-cli/intro"}},c=[],d={toc:c};function p(e){var t=e.components,n=(0,a.default)(e,i);return(0,o.mdx)("wrapper",(0,r.default)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,"Some useful tools and frameworks that include many of the needed features are provided for developing CKB applications. "),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"ckb-indexer"),(0,o.mdx)("p",{parentName:"li"},"ckb-indexer is an indexer RPC service for ckb developers. This is a standalone service for creating cell and transaction indexes as an alternate solution. ")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"ckb-cli"),(0,o.mdx)("p",{parentName:"li"},"ckb-cli is a command line tool for debugging CKB in development to facilitate user interaction with CKB. The functions of ckb-cli include:"),(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"Search for blockchain information."),(0,o.mdx)("li",{parentName:"ul"},"Configure environment variables."),(0,o.mdx)("li",{parentName:"ul"},"Invoke RPC to interact with CKB nodes."),(0,o.mdx)("li",{parentName:"ul"},"Handle mock transactions."),(0,o.mdx)("li",{parentName:"ul"},"Creates wallets and queries balances, etc."))),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Capsule"),(0,o.mdx)("p",{parentName:"li"},"Capsule provides a solution to build CKB scripts using the Rust programming language. Capsule is a development framework that creates smart contracts for the Layer 1 blockchain of Nervos' CKB. It is designed to provide an out-of-the-box solution that helps developers accomplish common tasks swiftly and effortlessly, to help developers develop, build, test, debug, and also deploy the script."),(0,o.mdx)("p",{parentName:"li"},"Capsule offers features including:"),(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Setting up footprints for new projects.")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Building RISC-V binaries for Nervos CKB-VM.")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Executing smart contract scripts locally with Docker.")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Auto-testing of smart contract scripts.")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Deploying configurable scripts to the Nervos CKB.")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Generating demo transaction data for debugging."),(0,o.mdx)("p",{parentName:"li"},"Scenario"),(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://docs.nervos.org/docs/labs/sudtbycapsule"},"Write a SUDT script by Capsule")))))),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Tippy"),(0,o.mdx)("p",{parentName:"li"},"Tippy is a tool to help set up and manage CKB nodes, enabling the installation and launching of a CKB node with a simple click."),(0,o.mdx)("p",{parentName:"li"},"Function:"),(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"Install and launch CKB Node"))),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Mercury "),(0,o.mdx)("p",{parentName:"li"},"Mercury is a tool that handles the development of applications on the CKB. Simply put, within the Nervos ecosystem, CKB is the Linux kernel and Mercury is Ubuntu.\nMercury is the bridge between CKB and applications by providing useful RPC services for applications such as dApps built on Lumos as well as wallets and exchanges built on ",(0,o.mdx)("inlineCode",{parentName:"p"},"ckb-sdk"),"."),(0,o.mdx)("p",{parentName:"li"},"Function:"),(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"on developing wallet applications: Mercury has interfaces for obtaining the balance of an address and for assembling transactions for transferring CKBytes, sUDT or xUDT."),(0,o.mdx)("li",{parentName:"ul"},"For exchanges: Mercury offers functions such as aggregating digital seets and fectching blocks. "))),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"CKB SDK"),(0,o.mdx)("p",{parentName:"li"},"ckb-sdk is a collection of libraries that allow interactions with local or remote CKB nodes through the use of JSON-RPC. The SDK uses the NewCkbApi API to support the ",(0,o.mdx)("strong",{parentName:"p"},"CKB"),", ",(0,o.mdx)("strong",{parentName:"p"},"CKB indexer")," and ",(0,o.mdx)("strong",{parentName:"p"},"Mercury")," module starting from 0.43.1 version. "),(0,o.mdx)("p",{parentName:"li"},"Function:"),(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"Wallet management"),(0,o.mdx)("li",{parentName:"ul"},"Account management"),(0,o.mdx)("li",{parentName:"ul"},"Cryptocurrency management"),(0,o.mdx)("li",{parentName:"ul"},"Communication with CKB networks"),(0,o.mdx)("li",{parentName:"ul"},"Token management")))),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Lumos"),(0,o.mdx)("p",{parentName:"li"},"Lumos is an open-source framework that was developed by the Nervos Developer Tools team, for building Nervos CKB DApps, designed to simplify dApp development on Nervos CKB. Lumos provides a JavaScript/TypeScript based framework, that can speed up dapp development significantly. For more information, refer to ",(0,o.mdx)("a",{parentName:"p",href:"https://xying21.github.io/lumos_doc/docs/preparation/setupsystem/"},"Lumos")))),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Polyjuice"),(0,o.mdx)("p",{parentName:"li"},"Polyjuice is an Ethereum compatible layer designed upon the Godwoken account model. Godwoken comes together with Polyjuice giving developers the ability to seamlessly deploy and run Ethereum contracts.")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Godwoken"),(0,o.mdx)("p",{parentName:"li"},"Godwoken is a layer 2 rollup framework that provides an abstracted account model and abstracted layer 2 transactions upon Nervos CKB. For more information, visit ",(0,o.mdx)("a",{parentName:"p",href:"https://docs.godwoken.io"},"Godwoken Documentation"))),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Forcebridge"),(0,o.mdx)("p",{parentName:"li"},"Force Bridge is an open source project that allows users to transfer whitelisted tokens from, say, the ethereum blockchain to the Nervos CKB blockchain through a series of smart contracts deployed on both chains. Force Bridge currently supports cross-chains in Bitcoin, Ethereum, Tron and Eos, and will support more blockchain projects in the future. Users can use Force Bridge Dapp to transfer assets from other chains to CKB to obtain the corresponding shadow assets, as well as to transfer the shadow assets back and obtain the native assets."))))}p.isMDXComponent=!0}}]);